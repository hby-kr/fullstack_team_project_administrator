<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artu.fullstack_team_project_administrator.mapper.EventReviewsMapper">
  <resultMap id="BaseResultMap" type="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="contents" jdbcType="VARCHAR" property="contents" />
    <result column="is_used" jdbcType="BOOLEAN" property="isUsed" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="report_reason" jdbcType="VARCHAR" property="reportedReason" />
    <result column="reported_at" jdbcType="TIMESTAMP" property="reportedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="deleted_reason" jdbcType="VARCHAR" property="deletedReason" />
  </resultMap>
  <sql id="Base_Column_List">
    review_id, user_id, event_id, rate, contents, is_used, is_deleted, reported_reason, reported_at, created_at, deleted_at, deleted_reason
  </sql>
  <insert id="insert" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    insert into event_reviews (review_id, user_id, event_id, rate, contents, created_at)
    VALUES (#{reviewId},  #{userId}, #{eventId}, #{rate}, #{contents}, #{createdAt})
  </insert>
  <!-- is_used 를 변수로 받아 공연리뷰 목록 조회 -->
  <select id="findAllByIsUsed" resultType="com.artu.fullstack_team_project_administrator.dto.EventReviews" parameterType="boolean" resultMap="BaseResultMap">
    SELECT *
    FROM event_reviews
    WHERE is_used = #{bool}
  </select>
<!-- user_id 를 변수로 받아 공연리뷰 목록 조회 -->
  <select id="findReviewsById" resultType="com.artu.fullstack_team_project_administrator.dto.EventReviews" parameterType="String" resultMap="BaseResultMap">
    SELECT *
    FROM event_reviews
    WHERE user_id = #{userId}
  </select>
<!-- review_id 를 변수로 받아 공연리뷰 목록 조회 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_reviews
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
<!-- 신고 받은 review -->
  <select id="findReportedReviews" resultType="com.artu.fullstack_team_project_administrator.dto.EventReviews" resultMap="BaseResultMap">
    SELECT * FROM event_reviews
    WHERE is_used = false
    AND is_deleted = false
    ORDER BY reported_at DESC
  </select>
<!-- event_id 랑 user_id 를 변수로 리뷰 찾기 -->
  <select id="findByEventIdAndUserId" resultType="com.artu.fullstack_team_project_administrator.dto.EventReviews" resultMap="BaseResultMap">
    SELECT * FROM event_reviews
    WHERE 1=1
    <if test="eventId !=null">
      AND event_id=#{eventId}
    </if>
    <if test="userId !=null and userId != ''">
      AND user_id=#{userId}
    </if>
  </select>
  <select id="findInactiveReviews" resultMap="BaseResultMap">
    SELECT * FROM event_reviews
    WHERE is_used = false
    AND is_deleted = true
    ORDER BY deleted_at DESC
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from event_reviews
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    update event_reviews
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="contents != null">
        contents = #{contents,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedReason != null">
        deleted_reason = #{deletedReason,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BOOLEAN}
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>

</mapper>