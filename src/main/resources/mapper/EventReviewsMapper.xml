<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artu.fullstack_team_project_administrator.mapper.EventReviewsMapper">
  <resultMap id="BaseResultMap" type="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="contents" jdbcType="VARCHAR" property="contents" />
    <result column="is_used" jdbcType="BOOLEAN" property="isUsed" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    review_id, user_id, event_id, rate, contents, is_used, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_reviews
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event_reviews
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="review_id" keyProperty="reviewId" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews" useGeneratedKeys="true">
    insert into event_reviews (user_id, event_id, rate, 
      contents, is_used, created_at
      )
    values (#{userId,jdbcType=VARCHAR}, #{eventId,jdbcType=INTEGER}, #{rate,jdbcType=INTEGER}, 
      #{contents,jdbcType=VARCHAR}, #{isUsed,jdbcType=BOOLEAN}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="review_id" keyProperty="reviewId" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews" useGeneratedKeys="true">
    insert into event_reviews
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="contents != null">
        contents,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="contents != null">
        #{contents,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    update event_reviews
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="contents != null">
        contents = #{contents,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.artu.fullstack_team_project_administrator.dto.EventReviews">
    update event_reviews
    set user_id = #{userId,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=INTEGER},
      rate = #{rate,jdbcType=INTEGER},
      contents = #{contents,jdbcType=VARCHAR},
      is_used = #{isUsed,jdbcType=BOOLEAN},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
</mapper>